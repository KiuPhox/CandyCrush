(()=>{"use strict";var e,t={387:(e,t,s)=>{var i,a,r,n=s(260);class d extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(10016391),this.createLoadingbar(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(16774867,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)}),this),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.pack("preload","./assets/pack.json","preload"),this.load.spritesheet("lightning","./assets/images/lightning-sheet.png",{frameWidth:288,frameHeight:271});for(let e=1;e<=14;e++)this.load.image(`bg-${e}`,`./assets/images/bg/bg-${e}.webp`)}update(){this.scene.start("GameScene")}createLoadingbar(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(6139463,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}!function(e){e.CREATE="create",e.IDLE="idle",e.SWAP="swap",e.MATCH="match",e.FILL="fill",e.NO_MOVE="no-move",e.LEVEL_CLEAR="level-clear"}(i||(i={})),function(e){e.BLUE="blue",e.GREEN="green",e.ORANGE="orange",e.PURPLE="purple",e.RED="red",e.YELLOW="yellow",e.COLOR="color"}(a||(a={})),function(e){e.NONE="none",e.VERTICAL_STRIPED="vertical-striped",e.HORIZONTAL_STRIPED="horizontal-striped",e.WRAPPED="wrapped",e.COLOR_BOMB="color-bomb"}(r||(r={}));const o={blue:430079,green:1507072,orange:16736256,purple:14506198,red:16646144,yellow:16776960,color:16777215},c={score:0,highscore:0,gridWidth:10,gridHeight:13,tileWidth:64,tileHeight:64,candyTypes:[a.BLUE,a.GREEN,a.ORANGE,a.PURPLE,a.RED,a.YELLOW]};class h{static HexToRRB(e){return Phaser.Display.Color.IntegerToRGB(e)}static RGBtoHex(e){return(e.r<<16)+(e.g<<8)+e.b}static Shade(e,t){return e.r=Math.floor(e.r*(1-t)),e.g=Math.floor(e.g*(1-t)),e.b=Math.floor(e.b*(1-t)),e}}class l{static Float(e,t){return Math.random()*(t-e)+e}static Int(e,t){return Math.floor(Math.random()*(t-e+1)+e)}static Percent(e){return this.Float(0,100)<=e}static Color(e,t){const s=h.HexToRRB(e),i=h.HexToRRB(t),a=Math.random(),r=Phaser.Math.Linear(s.r,i.r,a),n=Phaser.Math.Linear(s.g,i.g,a),d=Phaser.Math.Linear(s.b,i.b,a);return h.RGBtoHex({r,g:n,b:d})}static shuffleArray(e){const t=[...e];for(let e=t.length-1;e>0;e--){const s=Math.floor(Math.random()*(e+1));[t[e],t[s]]=[t[s],t[e]]}return t}}const g=class{static init(e){this.scene=e,this.background1=e.add.image(e.scale.width/2,e.scale.height/2,`bg-${l.Int(1,14)}`).setDepth(-1),this.background1.setScale(e.scale.height/this.background1.displayHeight),this.background2=e.add.image(e.scale.width/2,e.scale.height/2,`bg-${l.Int(1,14)}`).setDepth(-1),this.background2.setScale(e.scale.height/this.background2.displayHeight)}static changeBackground(){const e=this.background1.texture.key;this.scene.add.tween({targets:this.background2,alpha:0,duration:2e3,onComplete:()=>{this.background2.setTexture(e),this.background2.setAlpha(1),this.background1.setTexture(`bg-${l.Int(1,14)}`)}})}},p=class{constructor(e,t){this.name=e,this.currentState=t,this.previousState=t,this.emitter=new Phaser.Events.EventEmitter}static getInstance(){return this.instance||(this.instance=new this),this.instance}updateState(e){this.currentState!==e&&(this.previousState=this.currentState,this.currentState=e,this.handleStateChange(),this.emitter.emit(this.name+"-state-changed",this.currentState,this.previousState))}getCurrentState(){return this.currentState}getPreviousState(){return this.previousState}},y=class extends p{constructor(){super("board",i.IDLE)}handleStateChange(){}},m=[{key:"broken-particle",texture:"particle-1",config:{lifespan:500,angle:{min:0,max:360},rotate:{start:l.Float(0,360),end:l.Float(0,360)},scale:{start:l.Float(.4,.5),end:0,ease:"Back.in"},speed:{min:100,max:120},gravityY:200,duration:300}},{key:"twinkle",texture:"particle-2",config:{lifespan:500,angle:{min:0,max:360},rotate:{min:0,max:360,start:l.Float(0,360),end:l.Float(0,360)},scale:{start:l.Float(1,2),end:0,ease:"Back.in"},speed:{min:100,max:120},gravityY:200,duration:300,blendMode:n.BlendModes.ADD}},{key:"ring-impact",texture:"particle-3",config:{lifespan:500,alpha:{start:1,end:0,ease:"Quad.in"},scale:{start:0,end:1,ease:"Quart.out"},duration:300,blendMode:n.BlendModes.ADD}},{key:"striped-line",texture:"striped-line",config:{lifespan:500,duration:300,alpha:{start:0,end:1,ease:"Quad.out"},scale:2,blendMode:n.BlendModes.ADD}},{key:"wrapped-shockwave",texture:"particle-5",config:{lifespan:500,duration:300,alpha:{start:1,end:0,ease:"Quirt.in"},scale:{start:0,end:4,ease:"Cubic.out"},blendMode:n.BlendModes.ADD}},{key:"wrapped-big-shockwave",texture:"particle-5",config:{lifespan:500,duration:300,alpha:{start:1,end:0,ease:"Quirt.in"},scale:{start:0,end:8,ease:"Cubic.out"},blendMode:n.BlendModes.ADD}},{key:"left-confetti",texture:"square",config:{lifespan:5e3,scaleY:{start:.2,end:1,random:!0},alpha:{start:1,end:0,ease:"Quart.in"},rotate:{start:0,end:-3e3,random:!0},speedX:{min:500,max:2e3},speedY:{min:-500,max:-1500},bounce:{min:6,max:16},gravityY:800}},{key:"right-confetti",texture:"square",config:{scaleY:{start:.2,end:1,random:!0},lifespan:5e3,alpha:{start:1,end:0,ease:"Quart.in"},rotate:{start:0,end:3e3,random:!0},speedX:{min:-500,max:-2e3},speedY:{min:-500,max:-1500},bounce:{min:6,max:16},gravityY:800}},{key:"progress-bar-head",texture:"particle-3",config:{scale:.5,lifespan:5e3,alpha:{start:1,end:0,ease:"Quart.in"},rotate:{start:0,end:2e3,random:!0},speedX:{min:-500,max:-2e3},gravityY:800}}];class u extends Phaser.GameObjects.Particles.ParticleProcessor{constructor(e){var t,s;super(),this.dampingX=null!==(t=e.dampingX)&&void 0!==t?t:.95,this.dampingY=null!==(s=e.dampingY)&&void 0!==s?s:this.dampingX}update(e,t,s,i){e.velocityX*=this.dampingX,e.velocityY*=this.dampingY,e.scaleX=2*(i*Math.ceil(Math.abs(e.bounce))%1-.5)}}const f=u,C=[o.blue,o.green,o.yellow,o.purple,o.orange,o.red],S=class{static init(e){this.scene=e,this.particleEmitters=new Map,m.forEach((e=>{const t=this.scene.add.particles(void 0,void 0,e.texture,e.config).stop();t.setDepth(3),this.particleEmitters.set(e.key,t),"left-confetti"!==e.key&&"right-confetti"!==e.key||t.addParticleProcessor(new f({dampingX:.976,dampingY:.99}))}))}static playCandyExplodeEffect(e,t,s){const i=this.particleEmitters.get("broken-particle"),a=this.particleEmitters.get("twinkle"),r=this.particleEmitters.get("ring-impact");i&&a&&r&&(i.particleTint=s,r.particleTint=s,i.emitParticleAt(e,t,l.Int(2,3)),a.emitParticleAt(e,t,l.Int(3,5)),r.emitParticleAt(e,t))}static playCandyExplodeByStriped(e,t,s,i){const a=this.particleEmitters.get("striped-line");a&&(a.particleTint=i,a.particleRotate=s===r.HORIZONTAL_STRIPED?90:0,a.emitParticleAt(e,t))}static playWrappedExplode(e,t,s){const i=this.particleEmitters.get("wrapped-shockwave");i&&(i.particleTint=s,i.emitParticleAt(e,t))}static playWrappedBigExplode(e,t,s){const i=this.particleEmitters.get("wrapped-big-shockwave");i&&(i.particleTint=s,i.emitParticleAt(e,t))}static playConfettiEffect(){const e=this.particleEmitters.get("left-confetti"),t=this.particleEmitters.get("right-confetti");if(e&&t){for(let t=0;t<50;t++)e.particleTint=C[l.Int(0,C.length-1)],e.emitParticleAt(0,this.scene.scale.height/2+100);for(let e=0;e<50;e++)t.particleTint=C[l.Int(0,C.length-1)],t.emitParticleAt(this.scene.scale.width,this.scene.scale.height/2+100)}}};class T extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,"candies",e.candyType),this.gridX=e.gridX,this.gridY=e.gridY,this.candyType=e.candyType,this.setSpecialType(e.specialType),this.setScale(.35).setInteractive(),this.scene.add.existing(this)}playExplodeEffect(){var e,t;const s=null!==(e=this.getCenter().x)&&void 0!==e?e:0,i=null!==(t=this.getCenter().y)&&void 0!==t?t:0;S.playCandyExplodeEffect(s,i,o[this.candyType])}setGrid(e,t){this.gridX=e,this.gridY=t}getSpecialType(){return this.specialType}setSpecialType(e){switch(this.specialType=e,e){case r.NONE:this.setFrame(this.candyType);break;case r.VERTICAL_STRIPED:case r.HORIZONTAL_STRIPED:case r.WRAPPED:this.setFrame(`${this.candyType}-${this.specialType}`);break;case r.COLOR_BOMB:this.setFrame("color")}}getCandyType(){return this.candyType}setCandyType(e){this.candyType=e,this.setFrame(e),this.brightnessImage&&this.setFrame(e)}setBrightnessEffect(e,t){t?(this.brightnessImage||(this.brightnessImage=this.scene.add.image(this.x,this.y,"candies",this.candyType).setScale(.35).setTintFill(16777215)),this.brightnessImage.setPosition(this.x,this.y).setAlpha(e).setScale(this.scaleX,this.scaleY).setVisible(!0)):this.brightnessImage.setVisible(!1)}get isStriped(){return this.specialType===r.HORIZONTAL_STRIPED||this.specialType===r.VERTICAL_STRIPED}destroy(e){this.playExplodeEffect(),this.brightnessImage&&this.brightnessImage.destroy(),super.destroy(e)}}const v=class{static init(e){this.visited=[],this.matches=[],this.grid=e}static getMatches(){return this.visited=[],this.matches=[],this.initializeVisitedArray(),this.checkHorizontalMatches(),this.initializeVisitedArray(),this.checkVerticalMatches(),this.matches}static checkHorizontalMatches(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length-2;t++){const s=this.grid[e][t];if(s&&s.getCandyType()!==a.COLOR&&!this.visited[e][t]){const i={candies:[s],type:"horizontal"};let a=1;for(let r=t+1;r<this.grid[e].length;r++){const t=this.grid[e][r];if(!t||t.getCandyType()!==s.getCandyType())break;i.candies.push(t),a++}a>=3&&(this.matches.push(i),this.markVisitedCandies(i))}}}static checkVerticalMatches(){for(let e=0;e<this.grid[0].length;e++)for(let t=0;t<this.grid.length-2;t++){const s=this.grid[t][e];if(s&&s.getCandyType()!==a.COLOR&&!this.visited[t][e]){const i={candies:[s],type:"vertical"};let a=1;for(let r=t+1;r<this.grid.length;r++){const t=this.grid[r][e];if(!t||t.getCandyType()!==s.getCandyType())break;i.candies.push(t),a++}a>=3&&(this.matches.push(i),this.markVisitedCandies(i))}}}static markVisitedCandies(e){e.candies.forEach((e=>{const t=e.gridY,s=e.gridX;this.visited[t]&&!1===this.visited[t][s]&&(this.visited[t][s]=!0)}))}static initializeVisitedArray(){for(let e=0;e<this.grid.length;e++){this.visited[e]=[];for(let t=0;t<this.grid[e].length;t++)this.visited[e][t]=!1}}},E=class{static init(e){this.scene=e,this.swapEffects=[];for(let e=0;e<2;e++)this.swapEffects.push(this.scene.add.image(0,0,"particle-3").setDepth(1).setScale(0).setBlendMode(n.BlendModes.ADD))}static swapCandiesInternal(e,t){const s=I.grid;if(e&&t){const{x:i,y:a}=e,{x:r,y:n}=t,d=s[a][i],o=s[n][r],c=d;s[a][i]=o,s[n][r]=c,d&&d.setGrid(r,n),o&&o.setGrid(i,a)}}static swapCandies(e,t,s){y.getInstance().updateState(i.SWAP);const a=new Phaser.Math.Vector2(e.gridX,e.gridY),r=new Phaser.Math.Vector2(t.gridX,t.gridY),n=I.getCandyWorldPos(e),d=I.getCandyWorldPos(t);this.swapCandiesInternal(a,r),this.swapEffects[0].setPosition(e.x,e.y).setScale(1).setAlpha(1),this.swapEffects[1].setPosition(t.x,t.y).setScale(1).setAlpha(1),this.scene.add.tween({targets:this.swapEffects,scale:0,alpha:0,duration:200,ease:"Quad.in"}),this.scene.add.tween({targets:[e,this.swapEffects[0]],x:d.x,y:d.y,ease:"Quad.out",duration:200}),this.scene.add.tween({targets:[t,this.swapEffects[1]],x:n.x,y:n.y,ease:"Quad.out",duration:200,onComplete:()=>{s()}})}},P=class{static init(){this.currentScore=0,this.maxScore=100,this.emitter=new Phaser.Events.EventEmitter}static reset(e){this.maxScore=100*e,this.currentScore=0,this.emitter.emit("score-updated",this.currentScore,this.maxScore)}static addScore(e){this.currentScore>=this.maxScore||(this.currentScore+=e,this.emitter.emit("score-updated",this.currentScore,this.maxScore),this.currentScore>=this.maxScore&&this.emitter.emit("score-reached-max",this.currentScore,this.maxScore))}};class w extends Phaser.GameObjects.Rope{constructor(e){super(e,0,0,"lightning"),e.add.existing(this),this.setDepth(5).setColors(11987706).setBlendMode(n.BlendModes.ADD).play("lightning")}setLine(e,t){this.points[0]=e,this.points[this.points.length-1]=t}}var x;class R{static init(e){this.scene=e,this.firstSelectedCandy=void 0,this.secondSelectedCandy=void 0,this.selectedFrame=e.add.image(0,0,"selected-frame").setScale(.6).setVisible(!1).setDepth(5),e.add.tween({targets:this.selectedFrame,scale:.65,duration:600,repeat:-1,yoyo:!0}),e.input.on("gameobjectdown",this.candyDown,e)}static setFramePosition(e){const t=I.getCandyWorldPos(e);this.selectedFrame.setPosition(t.x,t.y).setVisible(!0)}static candyUp(){this.firstSelectedCandy=void 0,this.secondSelectedCandy=void 0}}x=R,R.candyDown=(e,t)=>{if(y.getInstance().getCurrentState()===i.IDLE&&t)if(x.firstSelectedCandy)if(x.firstSelectedCandy===t)x.firstSelectedCandy=void 0,x.selectedFrame.setVisible(!1);else{x.secondSelectedCandy=t;const e=Math.abs(x.firstSelectedCandy.gridX-x.secondSelectedCandy.gridX),s=Math.abs(x.firstSelectedCandy.gridY-x.secondSelectedCandy.gridY);1===e&&0===s||0===e&&1===s?(y.getInstance().updateState(i.SWAP),I.trySwapCandies(x.firstSelectedCandy,x.secondSelectedCandy)):x.firstSelectedCandy=void 0,x.selectedFrame.setVisible(!1)}else x.firstSelectedCandy=t,x.setFramePosition(x.firstSelectedCandy)};const b=R,O=class{static init(e){this.scene=e}static removeCandy(e,t){I.grid[e.gridY][e.gridX]=void 0,t?this.scene.tweens.addCounter({duration:t,onComplete:()=>{e.destroy()}}):e.destroy()}static removeColorCandyByColorBomb(e,t,s){for(let i=0;i<I.grid.length;i++)for(let a=0;a<I.grid[i].length;a++){const r=I.grid[i][a];r&&r.getCandyType()===t&&(s=Math.max(s,100*(a+1)+200),this.lightningCandy(e,r,100*a,(()=>{this.removeCandy(r)}))),P.addScore(1)}return s}static getWrappedCandies(e){const t=new Map;for(const s of e)for(const e of s.candies){const s=t.get(e)||0;t.set(e,s+1)}const s=[];return t.forEach(((e,t)=>{2===e&&s.push(t)})),s}static removeCandyByStriped(e,t,s,i){!t||t.getSpecialType()!==r.NONE&&t!==e?t&&t.getSpecialType()===r.COLOR_BOMB?(i.removeDelay=this.removeColorCandyByColorBomb(t,e.getCandyType(),i.removeDelay),i.candiesToRemove.delete(t),this.removeCandy(t,i.removeDelay)):t&&t!==e&&i.candiesToRemove.add(t):(i.removeDelay=Math.max(i.removeDelay,s),this.scene.tweens.addCounter({duration:s,onComplete:()=>{i.candiesToRemove.delete(t),this.removeCandy(t),S.playCandyExplodeByStriped(I.getCandyWorldPos(t).x,I.getCandyWorldPos(t).y,e.getSpecialType(),o[e.getCandyType()])}}))}static processCandiesToRemove(e){for(const t of e.candiesToRemove)if(t.getSpecialType()===r.HORIZONTAL_STRIPED){this.scene.cameras.main.shake(100,.02);for(let s=t.gridX;s>=0;s--){const i=I.grid[t.gridY][s];this.removeCandyByStriped(t,i,30*(t.gridX-s+1),e)}for(let s=t.gridX+1;s<I.grid[t.gridY].length;s++){const i=I.grid[t.gridY][s];this.removeCandyByStriped(t,i,30*(s+1-t.gridX),e)}P.addScore(8)}else if(t.getSpecialType()===r.VERTICAL_STRIPED){this.scene.cameras.main.shake(100,.02);for(let s=t.gridY;s>=0;s--){const i=I.grid[s][t.gridX];this.removeCandyByStriped(t,i,30*(t.gridY-s+1),e)}for(let s=t.gridY+1;s<I.grid.length;s++){const i=I.grid[s][t.gridX];this.removeCandyByStriped(t,i,30*(s+1-t.gridY),e)}P.addScore(8)}else if(t.getSpecialType()===r.WRAPPED){this.scene.cameras.main.shake(100,.02),S.playWrappedExplode(t.x,t.y,o[t.getCandyType()]);const s=I.getNeighborCandies(t,1);for(const i of s)i.getSpecialType()===r.NONE?(e.candiesToRemove.delete(i),this.removeCandy(i,0)):i.getSpecialType()===r.COLOR_BOMB?(e.removeDelay=this.removeColorCandyByColorBomb(i,t.getCandyType(),e.removeDelay),e.candiesToRemove.delete(i),this.removeCandy(i,e.removeDelay)):e.candiesToRemove.add(i);this.removeCandy(t),P.addScore(s.length)}}static removeCandyGroup(e){const t=this.getWrappedCandies(e),s={removeDelay:0,candiesToRemove:new Set};for(const i of e){for(let e=0;e<i.candies.length;e++){const a=i.candies[e];if(-1!==t.indexOf(a)){const t=[...i.candies];t.splice(e),this.scene.add.tween({targets:t,x:a.x,y:a.y,duration:50,ease:"Quad.out"}),a.setSpecialType(r.WRAPPED),s.candiesToRemove.delete(a),i.type="wrapped"}else s.candiesToRemove.add(a)}if(4===i.candies.length&&"wrapped"!==i.type){let e=l.Percent(50)?1:2;b.firstSelectedCandy&&-1!==i.candies.indexOf(b.firstSelectedCandy)?e=i.candies.indexOf(b.firstSelectedCandy):b.secondSelectedCandy&&-1!==i.candies.indexOf(b.secondSelectedCandy)&&(e=i.candies.indexOf(b.secondSelectedCandy));const t=[...i.candies];t.splice(e);const a=i.candies[e];S.playCandyExplodeEffect(a.x,a.y,o[a.getCandyType()]),a.setSpecialType("horizontal"===i.type?r.VERTICAL_STRIPED:r.HORIZONTAL_STRIPED),this.scene.add.tween({targets:t,x:a.x,y:a.y,duration:50,ease:"Quad.out"}),s.candiesToRemove.delete(a)}else if(5===i.candies.length){const e=i.candies[2];e.setCandyType(a.COLOR),e.setSpecialType(r.COLOR_BOMB),s.candiesToRemove.delete(e),S.playCandyExplodeEffect(e.x,e.y,o[e.getCandyType()]);const t=[...i.candies];t.splice(2),this.scene.add.tween({targets:t,x:e.x,y:e.y,duration:50,ease:"Quad.out"})}}this.processCandiesToRemove(s),this.scene.time.delayedCall(s.removeDelay+50,(()=>{y.getInstance().updateState(i.FILL),P.addScore(s.candiesToRemove.size);for(const e of s.candiesToRemove)e&&I.grid[e.gridY][e.gridX]&&this.removeCandy(e);I.resetCandy(),I.fillCandy().then((()=>{b.candyUp(),this.scene.checkMatches()}))}))}static lightningCandy(e,t,s,i){const a=new w(this.scene).setVisible(!1);a.setLine(new Phaser.Math.Vector2(e.x,e.y),new Phaser.Math.Vector2(t.x,t.y)),this.scene.tweens.addCounter({duration:s,onComplete:()=>{i&&i(),a.setVisible(!0),this.scene.tweens.addCounter({duration:200,onComplete:()=>{a.destroy()}})}})}},M=class{static init(e){this.scene=e;const t=new Phaser.Math.Vector2(e.scale.width/2,e.scale.height/2),s=Math.min(c.gridWidth*c.tileWidth,c.gridHeight*c.tileHeight);this.rectangle=new Phaser.Geom.Rectangle(t.x-s/2,t.y-s/2,s,s),this.circle=new Phaser.Geom.Circle(t.x,t.y,s/2),this.triangle=new Phaser.Geom.Triangle(t.x,t.y-s*Math.sqrt(3)/4,t.x-s/2,t.y+s*Math.sqrt(3)/4,t.x+s/2,t.y+s*Math.sqrt(3)/4)}static shuffle(e,t){y.getInstance().updateState(i.CREATE),e=l.shuffleArray(e);const s=[this.rectangle,this.circle,this.triangle][l.Int(0,2)],a=s.getPoints(e.length);for(let i=0;i<e.length;i++){const n=i/e.length,d=e[i];this.scene.add.tween({targets:d,x:a[i].x,y:a[i].y,duration:500,ease:"Quad.out",onComplete:()=>{t&&d.getSpecialType()!==r.COLOR_BOMB&&d.setCandyType(c.candyTypes[Phaser.Math.RND.between(0,c.candyTypes.length-1)]),this.scene.tweens.addCounter({from:n,to:n+1,duration:1e3,ease:"Linear",onComplete:()=>{this.scene.add.tween({targets:d,x:I.getCandyWorldPos(d).x,y:I.getCandyWorldPos(d).y,duration:500,ease:"Quad.out",delay:500})},onUpdate:e=>{let t=e.getValue();t>1&&(t-=1);const i=s.getPoint(t);d.setPosition(i.x,i.y)}})}})}return 2600}},B=class extends T{constructor(e){super(e),this.setScale(0)}show(e,t,s,i,a){this.setScale(0),this.setPosition(e,t),this.setCandyType(s),this.setSpecialType(i),this.scene.tweens.add({targets:this,scale:1,duration:300,ease:"Back.out",onComplete:()=>{a&&a()}})}};class D{static init(e){this.scene=e,this.grid=[],b.init(e),E.init(e),O.init(e),M.init(e),v.init(this.grid),this.candyGridOffset=new Phaser.Math.Vector2((e.scale.width-c.gridWidth*c.tileWidth+c.tileWidth)/2,(e.scale.height-c.gridHeight*c.tileHeight+c.tileWidth)/2),this.scene.add.nineslice(this.scene.scale.width/2,this.scene.scale.height/2,"grid",void 0,c.gridWidth*c.tileWidth+10,c.gridHeight*c.tileHeight+10,50,50,50,50),this.candyLayer=this.createLayerMask(),this.bigCandy=new B({x:50,y:50,gridX:0,gridY:0,scene:this.scene,candyType:a.BLUE,specialType:r.HORIZONTAL_STRIPED})}static createLayerMask(){const e=this.scene.add.layer(),t=this.scene.make.graphics();return t.fillRect(this.scene.scale.width/2-c.gridWidth*c.tileWidth/2,D.candyGridOffset.y-c.tileWidth/2,c.gridWidth*c.tileWidth,c.gridHeight*c.tileHeight),this.candyMask=t.createGeometryMask(),e.setMask(this.candyMask),e}static create(){const e=[];for(let t=0;t<c.gridHeight;t++){this.grid[t]=[];for(let s=0;s<c.gridWidth;s++){const i=D.addCandy(s,t);D.grid[t][s]=i,e.push(i)}}this.candyLayer.clearMask();const t=M.shuffle(e,!1);this.scene.time.delayedCall(t,(()=>{this.candyLayer.setMask(this.candyMask),this.scene.checkMatches()}))}static shuffle(){const e=[];for(let t=0;t<c.gridHeight;t++)for(let s=0;s<c.gridWidth;s++){const i=this.grid[t][s];i&&e.push(i)}this.candyLayer.clearMask();const t=M.shuffle(e,!0);this.scene.time.delayedCall(t,(()=>{this.candyLayer.setMask(this.candyMask),this.scene.checkMatches()}))}static clear(){for(let e=0;e<c.gridHeight;e++)for(let t=0;t<c.gridWidth;t++){const s=this.grid[e][t];s&&O.removeCandy(s)}}static playIdleEffect(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++){const s=this.grid[e][t];s&&this.scene.add.tween({targets:s,y:D.getCandyWorldPos(s).y-20,duration:200,delay:100*(e+t),ease:"Quad.out",yoyo:!0})}}static addCandy(e,t,s,i){const a=null!=s?s:c.candyTypes[Phaser.Math.RND.between(0,c.candyTypes.length-1)],n=null!=i?i:r.NONE,d=new T({scene:this.scene,candyType:a,specialType:n,x:e*c.tileWidth+this.candyGridOffset.x,y:t*c.tileHeight+this.candyGridOffset.y,gridX:e,gridY:t});return this.candyLayer.add(d),d}static fillCandy(){return new Promise((e=>{const t=[];for(let e=0;e<c.gridWidth;e++)t[e]=[];for(let e=0;e<this.grid.length;e++)for(let s=0;s<this.grid[e].length;s++)if(void 0===this.grid[e][s]){const i=this.addCandy(s,e);t[s].push(i),this.grid[e][s]=i}for(let e=0;e<t.length;e++)for(let s=0;s<t[e].length;s++){const i=t[e][s];i.y-=c.tileHeight*t[e].length,this.scene.add.tween({targets:i,y:i.y+c.tileHeight*t[e].length,ease:"Bounce.out",duration:500})}this.scene.tweens.addCounter({duration:550,onComplete:()=>{e()}})}))}static resetCandy(){var e;for(let t=this.grid.length-1;t>0;t--)for(let s=this.grid[t].length-1;s>=0;s--){const i=t;if(void 0===this.grid[i][s]&&void 0!==this.grid[i-1][s]){const a=this.grid[i-1][s];this.grid[i][s]=a,this.grid[i-1][s]=void 0,null==a||a.setGrid(s,i),null===(e=this.grid[i-1][s])||void 0===e||e.setGrid(s,i-1),this.scene.add.tween({targets:a,y:c.tileHeight*i+D.candyGridOffset.y,ease:"Bounce.out",duration:500}),s=this.grid[i].length,t=this.grid.length-1}}}static trySwapCandies(e,t){e&&t&&(y.getInstance().updateState(i.SWAP),E.swapCandies(e,t,(()=>{if(e.getSpecialType()===r.COLOR_BOMB||t.getSpecialType()===r.COLOR_BOMB){const s=e.getSpecialType()===r.COLOR_BOMB?e:t,i=e===s?t:e,a=[];let n=0;if(i.getSpecialType()===r.COLOR_BOMB){const e=Math.floor(c.gridWidth/2);for(let t=0;t<this.grid.length;t++){for(let i=0;i<e;i++){const e=this.grid[t][i];e&&e.getSpecialType()!==r.COLOR_BOMB&&(n=Math.max(n,100*(i+1)+200),O.lightningCandy(s,e,100*i,(()=>{O.removeCandy(e),P.addScore(1)})))}for(let s=this.grid[t].length-1;s>=e;s--){const e=this.grid[t][s];e&&e.getSpecialType()!==r.COLOR_BOMB&&(n=Math.max(n,100*(s+1)+200),O.lightningCandy(i,e,100*(this.grid[t].length-s-1),(()=>{O.removeCandy(e),P.addScore(1)})))}}a.push({candies:[i],type:"horizontal"})}else if(i.getSpecialType()===r.VERTICAL_STRIPED||i.getSpecialType()===r.HORIZONTAL_STRIPED||i.getSpecialType()===r.WRAPPED){const e=i.getSpecialType()===r.WRAPPED;for(let t=0;t<this.grid.length;t++)for(let d=0;d<this.grid[t].length;d++){const o=this.grid[t][d];if(o&&o.getCandyType()===i.getCandyType()&&o.getSpecialType()===r.NONE){n=Math.max(n,100*(d+1)+200);const t=e?r.WRAPPED:l.Percent(50)?r.VERTICAL_STRIPED:r.HORIZONTAL_STRIPED;O.lightningCandy(s,o,100*d,(()=>{o.setSpecialType(t),a.push({candies:[o],type:"horizontal"})}))}}}else n=O.removeColorCandyByColorBomb(s,i.getCandyType(),n);this.scene.time.delayedCall(n,(()=>{O.removeCandy(s),O.removeCandyGroup(a)}))}else if(e.isStriped&&t.isStriped){e.setSpecialType(r.VERTICAL_STRIPED),t.setSpecialType(r.HORIZONTAL_STRIPED);const s=[];s.push({candies:[e,t],type:"horizontal"}),O.removeCandyGroup(s)}else if(e.getSpecialType()===r.WRAPPED&&t.getSpecialType()===r.WRAPPED){S.playWrappedBigExplode(e.x,e.y,o[e.getCandyType()]);const s=this.getNeighborCandies(e,3),i={removeDelay:0,candiesToRemove:new Set};O.removeCandy(e),O.removeCandy(t);for(const a of s)a!==t&&(a.getSpecialType()===r.NONE?(i.candiesToRemove.delete(a),O.removeCandy(a,0)):a.getSpecialType()===r.COLOR_BOMB?(i.removeDelay=O.removeColorCandyByColorBomb(a,e.getCandyType(),i.removeDelay),i.candiesToRemove.delete(a),O.removeCandy(a,i.removeDelay)):i.candiesToRemove.add(a));O.processCandiesToRemove(i),P.addScore(s.length),this.scene.tweens.addCounter({duration:i.removeDelay,onComplete:()=>{O.removeCandyGroup([])}})}else if(e.isStriped&&t.getSpecialType()===r.WRAPPED||t.isStriped&&e.getSpecialType()===r.WRAPPED){O.removeCandy(e),O.removeCandy(t);const s={removeDelay:0,candiesToRemove:new Set},i=[-1,0,1],{x:a,y:n}=this.getCandyWorldPos(e);this.bigCandy.show(a,n,e.getCandyType(),r.HORIZONTAL_STRIPED,(()=>{this.bigCandy.setScale(0),this.scene.cameras.main.shake(100,.02);for(const t of i){const i=e.gridY+t;if(!(i>=this.grid.length||i<0)){for(let t=e.gridX;t>=0;t--){const a=D.grid[i][t];O.removeCandyByStriped(this.bigCandy,a,30*(e.gridX-t+1),s)}for(let t=e.gridX+1;t<D.grid[i].length;t++){const a=D.grid[i][t];O.removeCandyByStriped(this.bigCandy,a,30*(t+1-e.gridX),s)}O.processCandiesToRemove(s),P.addScore(8)}}this.scene.tweens.addCounter({duration:500,onComplete:()=>{this.bigCandy.show(a,n,e.getCandyType(),r.VERTICAL_STRIPED,(()=>{this.bigCandy.setScale(0),this.scene.cameras.main.shake(100,.02);for(const t of i){const i=e.gridX+t;if(!(i>=this.grid[0].length||i<0)){for(let t=e.gridY;t>=0;t--){const a=D.grid[t][i];s.removeDelay=Math.max(s.removeDelay,30*(e.gridY-t+1)),O.removeCandyByStriped(this.bigCandy,a,30*(e.gridY-t+1),s)}for(let t=e.gridY+1;t<D.grid.length;t++){const a=D.grid[t][i];s.removeDelay=Math.max(s.removeDelay,30*(t+1-e.gridY)),O.removeCandyByStriped(this.bigCandy,a,30*(t+1-e.gridY),s)}O.processCandiesToRemove(s),P.addScore(8)}}this.scene.tweens.addCounter({duration:s.removeDelay,onComplete:()=>{O.removeCandyGroup([])}})}))}})}))}else this.scene.checkMatches()})))}static getHint(){let e=[];for(let t=0;t<this.grid.length;t++)for(let s=0;s<this.grid[t].length-1;s++){const i=new Phaser.Math.Vector2(s,t),a=new Phaser.Math.Vector2(s+1,t);E.swapCandiesInternal(i,a);const r=v.getMatches();r.length>0?(E.swapCandiesInternal(i,a),e.push(...r)):E.swapCandiesInternal(i,a)}for(let t=0;t<this.grid[0].length;t++)for(let s=0;s<this.grid.length-1;s++){const i=new Phaser.Math.Vector2(t,s),a=new Phaser.Math.Vector2(t,s+1);E.swapCandiesInternal(i,a);const r=v.getMatches();r.length>0?(E.swapCandiesInternal(i,a),e.push(...r)):E.swapCandiesInternal(i,a)}e=l.shuffleArray(e);for(let t=5;t>=3;t--)for(const s of e)if(s.candies.length===t)return s;return null}static getNeighborCandies(e,t){const s=[];for(let i=e.gridY-t;i<=e.gridY+t;i++)for(let a=e.gridX-t;a<=e.gridX+t;a++){if(i<0||i>=this.grid.length)continue;if(a<0||a>=this.grid[0].length)continue;const t=this.grid[i][a];t&&t!==e&&s.push(t)}return s}static getCandyWorldPos(e){return new Phaser.Math.Vector2(e.gridX*c.tileWidth+this.candyGridOffset.x,e.gridY*c.tileHeight+this.candyGridOffset.y)}}const I=D;class k extends Phaser.GameObjects.Container{constructor(e){super(e),this.onScoreUpdated=(e,t)=>{this.updateProgress(e/t*100)},e.add.existing(this),this.createProgressbar(),this.createParticleEmitter(),this.createProgressBitmapText(),P.emitter.on("score-updated",this.onScoreUpdated)}createParticleEmitter(){this.particleEmitter=this.scene.add.particles(0,0,"particle-2",{color:[11987706],scale:{min:2,max:3},lifespan:200,alpha:{start:1,end:0,ease:"Quad.in"},rotate:{start:0,end:2e3,random:!0},angle:{min:120,max:240},speed:500,radial:!0,frequency:15,blendMode:n.BlendModes.ADD}),this.particleEmitter.setPosition(this.progressFill.getRightCenter().x,this.progressFill.getRightCenter().y),this.add(this.particleEmitter)}createProgressbar(){this.currentProgress=1,this.add(this.scene.add.image(-350,0,"progress-head")),this.progressFill=this.scene.add.image(-350,0,"progress-fill").setOrigin(0,.5).setScale(this.currentProgress,1),this.add(this.progressFill)}createProgressBitmapText(){this.progressBitmapText=this.scene.add.bitmapText(0,0,"bananasp","0%").setOrigin(.5).setTint(16173412,16173412,14908966,14908966).setDropShadow(10,10,0,.1),this.add(this.progressBitmapText)}updateProgress(e){e<=100&&(this.scene.tweens.addCounter({from:this.currentProgress,to:e,duration:300,onUpdate:e=>{this.progressBitmapText.setText(e.getValue().toFixed(2)+"%")}}),this.currentProgress=e,this.scene.add.tween({targets:this.progressFill,scaleX:e/2,duration:300,ease:"Quad.out",onUpdate:()=>{this.particleEmitter.setPosition(this.progressFill.getRightCenter().x,this.progressFill.getRightCenter().y)}}))}}const L=k;class A extends Phaser.Scene{constructor(){super("GameScene"),this.onBoardStateChanged=e=>{switch(e){case i.CREATE:g.changeBackground();break;case i.IDLE:this.tryGetHint();case i.FILL:}},this.onScoreReachedMax=(e,t)=>{S.playConfettiEffect(),this.levelClear=!0}}init(){g.init(this),S.init(this),I.init(this),P.init()}create(){var e;I.create(),this.createProgressBar(),this.cameras.main.setBackgroundColor(7908062),this.idleTimer=5e3,this.levelClear=!1,this.debug=!1,this.currentLevel=1,this.anims.create({key:"lightning",frames:this.anims.generateFrameNames("lightning",{prefix:"",start:0,end:60}),frameRate:30,yoyo:!0,repeat:-1}),console.log("Debug mode is currently inactive. To toggle debug mode, press the D key"),null===(e=this.input.keyboard)||void 0===e||e.on("keydown-D",(()=>{this.debug=!this.debug,console.log("Debugging: "+this.debug)})),y.getInstance().emitter.on("board-state-changed",this.onBoardStateChanged),P.emitter.on("score-reached-max",this.onScoreReachedMax)}createProgressBar(){new L(this).setDepth(2).setScale(.5).setPosition(this.scale.width/2,I.candyGridOffset.y-c.tileWidth/2-50)}checkMatches(){const e=v.getMatches();e.length>0?(y.getInstance().updateState(i.MATCH),O.removeCandyGroup(e)):this.levelClear?(this.currentLevel++,this.levelClear=!1,P.reset(this.currentLevel),I.shuffle()):(this.debug||I.trySwapCandies(b.firstSelectedCandy,b.secondSelectedCandy),b.candyUp(),this.tweens.addCounter({duration:200,onComplete:()=>{y.getInstance().updateState(i.IDLE)}}))}tryGetHint(){this.hintTween&&!this.hintTween.isDestroyed()&&y.getInstance().getCurrentState()!==i.SWAP&&(this.hintTween.stop(),this.hintTween.destroy());const e=I.getHint();e?(e.candies.forEach((e=>{e.setBrightnessEffect(1,!0)})),this.hintTween=this.tweens.addCounter({duration:300,repeat:-1,from:0,to:1,yoyo:!0,onUpdate:t=>{e.candies.forEach((e=>{const s=Phaser.Math.Easing.Sine.InOut(t.getValue());e.setBrightnessEffect(.4*s,!0),e.setScale(.35+s*(.35-.38),.35+s*(.35-.32))}))},onStop:()=>{e.candies.forEach((e=>{e.setBrightnessEffect(0,!1),e.setScale(.35)}))}})):I.shuffle()}update(e,t){y.getInstance().getCurrentState()===i.IDLE?(this.idleTimer-=t,this.idleTimer<=0&&(this.idleTimer=3e3,I.playIdleEffect())):this.idleTimer=5e3}}const W={title:"Candy crush",url:"https://github.com/digitsensitive/phaser3-typescript",version:"2.0",scale:{width:720,height:window.innerHeight>window.innerWidth?720*window.innerHeight/window.innerWidth:1080,parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},type:Phaser.AUTO,parent:"game",scene:[d,A],backgroundColor:"#de3412"};class H extends Phaser.Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new H(W)}))}},s={};function i(e){var a=s[e];if(void 0!==a)return a.exports;var r=s[e]={exports:{}};return t[e].call(r.exports,r,r.exports,i),r.exports}i.m=t,e=[],i.O=(t,s,a,r)=>{if(!s){var n=1/0;for(h=0;h<e.length;h++){for(var[s,a,r]=e[h],d=!0,o=0;o<s.length;o++)(!1&r||n>=r)&&Object.keys(i.O).every((e=>i.O[e](s[o])))?s.splice(o--,1):(d=!1,r<n&&(n=r));if(d){e.splice(h--,1);var c=a();void 0!==c&&(t=c)}}return t}r=r||0;for(var h=e.length;h>0&&e[h-1][2]>r;h--)e[h]=e[h-1];e[h]=[s,a,r]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};i.O.j=t=>0===e[t];var t=(t,s)=>{var a,r,[n,d,o]=s,c=0;if(n.some((t=>0!==e[t]))){for(a in d)i.o(d,a)&&(i.m[a]=d[a]);if(o)var h=o(i)}for(t&&t(s);c<n.length;c++)r=n[c],i.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return i.O(h)},s=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];s.forEach(t.bind(null,0)),s.push=t.bind(null,s.push.bind(s))})();var a=i.O(void 0,[216],(()=>i(387)));a=i.O(a)})();