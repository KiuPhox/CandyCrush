(()=>{"use strict";var e,t={429:(e,t,i)=>{var s,a,r,n=i(260);class d extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(10016391),this.createLoadingbar(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(16774867,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)}),this),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.pack("preload","./assets/pack.json","preload"),this.load.spritesheet("lightning","./assets/images/lightning-sheet.png",{frameWidth:288,frameHeight:271});for(let e=1;e<=14;e++)this.load.image(`bg-${e}`,`./assets/images/bg/bg-${e}.webp`)}update(){this.scene.start("GameScene")}createLoadingbar(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(6139463,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}!function(e){e.CREATE="create",e.IDLE="idle",e.SWAP="swap",e.MATCH="match",e.FILL="fill",e.NO_MOVE="no-move",e.LEVEL_CLEAR="level-clear"}(s||(s={})),function(e){e.BLUE="blue",e.GREEN="green",e.ORANGE="orange",e.PURPLE="purple",e.RED="red",e.YELLOW="yellow",e.COLOR="color"}(a||(a={})),function(e){e.NONE="none",e.VERTICAL_STRIPED="vertical-striped",e.HORIZONTAL_STRIPED="horizontal-striped",e.WRAPPED="wrapped",e.COLOR_BOMB="color-bomb"}(r||(r={}));const c={blue:430079,green:1507072,orange:16736256,purple:14506198,red:16646144,yellow:16776960,color:16777215},h={score:0,highscore:0,gridWidth:10,gridHeight:12,tileWidth:64,tileHeight:64,candyTypes:[a.BLUE,a.GREEN,a.ORANGE,a.PURPLE,a.RED,a.YELLOW]};class o{static HexToRRB(e){return Phaser.Display.Color.IntegerToRGB(e)}static RGBtoHex(e){return(e.r<<16)+(e.g<<8)+e.b}static Shade(e,t){return e.r=Math.floor(e.r*(1-t)),e.g=Math.floor(e.g*(1-t)),e.b=Math.floor(e.b*(1-t)),e}}class l{static Float(e,t){return Math.random()*(t-e)+e}static Int(e,t){return Math.floor(Math.random()*(t-e+1)+e)}static Percent(e){return this.Float(0,100)<=e}static Color(e,t){const i=o.HexToRRB(e),s=o.HexToRRB(t),a=Math.random(),r=Phaser.Math.Linear(i.r,s.r,a),n=Phaser.Math.Linear(i.g,s.g,a),d=Phaser.Math.Linear(i.b,s.b,a);return o.RGBtoHex({r,g:n,b:d})}static shuffleArray(e){const t=[...e];for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.random()*(e+1));[t[e],t[i]]=[t[i],t[e]]}return t}}const g=class{static init(e){this.scene=e,this.background1=e.add.image(e.scale.width/2,e.scale.height/2,`bg-${l.Int(1,14)}`).setDepth(-1),this.background1.setScale(e.scale.height/this.background1.displayHeight),this.background2=e.add.image(e.scale.width/2,e.scale.height/2,`bg-${l.Int(1,14)}`).setDepth(-1),this.background2.setScale(e.scale.height/this.background2.displayHeight)}static changeBackground(){const e=this.background1.texture.key;this.scene.add.tween({targets:this.background2,alpha:0,duration:2e3,onComplete:()=>{this.background2.setTexture(e),this.background2.setAlpha(1),this.background1.setTexture(`bg-${l.Int(1,14)}`)}})}},p=class{constructor(e,t){this.name=e,this.currentState=t,this.previousState=t,this.emitter=new Phaser.Events.EventEmitter}static getInstance(){return this.instance||(this.instance=new this),this.instance}updateState(e){this.currentState!==e&&(this.previousState=this.currentState,this.currentState=e,this.handleStateChange(),this.emitter.emit(this.name+"-state-changed",this.currentState,this.previousState))}getCurrentState(){return this.currentState}getPreviousState(){return this.previousState}},y=class extends p{constructor(){super("board",s.IDLE)}handleStateChange(){}},u=[{key:"broken-particle",texture:"particle-1",config:{lifespan:500,angle:{min:0,max:360},rotate:{start:l.Float(0,360),end:l.Float(0,360)},scale:{start:l.Float(.4,.5),end:0,ease:"Back.in"},speed:{min:100,max:120},gravityY:200,duration:300}},{key:"twinkle",texture:"particle-2",config:{lifespan:500,angle:{min:0,max:360},rotate:{min:0,max:360,start:l.Float(0,360),end:l.Float(0,360)},scale:{start:l.Float(1,2),end:0,ease:"Back.in"},speed:{min:100,max:120},gravityY:200,duration:300,blendMode:n.BlendModes.ADD}},{key:"ring-impact",texture:"particle-3",config:{lifespan:500,alpha:{start:1,end:0,ease:"Quad.in"},scale:{start:0,end:1,ease:"Quart.out"},duration:300,blendMode:n.BlendModes.ADD,stopAfter:1}},{key:"striped-line",texture:"striped-line",config:{lifespan:500,duration:300,alpha:{start:0,end:1,ease:"Quad.out"},scale:2,blendMode:n.BlendModes.ADD,stopAfter:1}},{key:"left-confetti",texture:"square",config:{scale:.5,lifespan:5e3,alpha:{start:1,end:0,ease:"Quart.in"},rotate:{start:0,end:-2e3,random:!0},speedX:{min:500,max:2e3},speedY:{min:-500,max:-1500},gravityY:800}},{key:"right-confetti",texture:"square",config:{scale:.5,lifespan:5e3,alpha:{start:1,end:0,ease:"Quart.in"},rotate:{start:0,end:2e3,random:!0},speedX:{min:-500,max:-2e3},speedY:{min:-500,max:-1500},gravityY:800}},{key:"progress-bar-head",texture:"particle-3",config:{scale:.5,lifespan:5e3,alpha:{start:1,end:0,ease:"Quart.in"},rotate:{start:0,end:2e3,random:!0},speedX:{min:-500,max:-2e3},gravityY:800}}];class f extends Phaser.GameObjects.Particles.ParticleProcessor{constructor(e){var t,i;super(),this.dampingX=null!==(t=e.dampingX)&&void 0!==t?t:.95,this.dampingY=null!==(i=e.dampingY)&&void 0!==i?i:this.dampingX}update(e,t,i,s){e.velocityX*=this.dampingX,e.velocityY*=this.dampingY}}const m=f,C=[c.blue,c.green,c.yellow,c.purple,c.orange,c.red],S=class{static init(e){this.scene=e,this.particleEmitters=new Map,u.forEach((e=>{const t=this.scene.add.particles(void 0,void 0,e.texture,e.config).stop();this.particleEmitters.set(e.key,t),"left-confetti"!==e.key&&"right-confetti"!==e.key||t.addParticleProcessor(new m({dampingX:.976,dampingY:.99}))}))}static playCandyExplodeEffect(e,t,i){const s=this.particleEmitters.get("broken-particle"),a=this.particleEmitters.get("twinkle"),r=this.particleEmitters.get("ring-impact");s&&a&&r&&(s.particleTint=i,r.particleTint=i,s.setDepth(1).emitParticleAt(e,t,l.Int(2,3)),a.setDepth(1).emitParticleAt(e,t,l.Int(3,5)),r.emitParticleAt(e,t))}static playCandyExplodeByStriped(e,t,i,s){const a=this.particleEmitters.get("striped-line");a&&(a.particleTint=s,a.particleRotate=i===r.HORIZONTAL_STRIPED?90:0,a.setDepth(3),a.emitParticleAt(e,t))}static playConfettiEffect(){const e=this.particleEmitters.get("left-confetti"),t=this.particleEmitters.get("right-confetti");if(e&&t){e.setDepth(1),t.setDepth(1);for(let t=0;t<50;t++)e.particleTint=C[l.Int(0,C.length-1)],e.emitParticleAt(0,this.scene.scale.height/2+100);for(let e=0;e<50;e++)t.particleTint=C[l.Int(0,C.length-1)],t.emitParticleAt(this.scene.scale.width,this.scene.scale.height/2+100)}}};class T extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.candyType,e.frame),this.gridX=e.gridX,this.gridY=e.gridY,this.candyType=e.candyType,this.setSpecialType(e.specialType),this.setScale(.35).setInteractive(),this.scene.add.existing(this),this.preFX&&(this.colorMatrix=this.preFX.addColorMatrix(),this.colorMatrix.active=!1)}playExplodeEffect(){var e,t;const i=null!==(e=this.getCenter().x)&&void 0!==e?e:0,s=null!==(t=this.getCenter().y)&&void 0!==t?t:0;S.playCandyExplodeEffect(i,s,c[this.candyType])}setGrid(e,t){this.gridX=e,this.gridY=t}getSpecialType(){return this.specialType}setSpecialType(e){switch(this.specialType=e,e){case r.NONE:this.setTexture(this.candyType);break;case r.VERTICAL_STRIPED:case r.HORIZONTAL_STRIPED:this.setTexture(`${this.candyType}-${this.specialType}`);break;case r.COLOR_BOMB:this.setTexture("color")}}getCandyType(){return this.candyType}setCandyType(e){this.candyType=e,this.setTexture(e)}setBrightnessEffect(e,t){this.preFX&&(this.colorMatrix.brightness(e),this.colorMatrix.active=t)}destroy(e){this.playExplodeEffect(),super.destroy(e)}}const E=class{static init(e){this.visited=[],this.matches=[],this.grid=e}static getMatches(){return this.visited=[],this.matches=[],this.initializeVisitedArray(),this.checkHorizontalMatches(),this.initializeVisitedArray(),this.checkVerticalMatches(),this.matches}static checkHorizontalMatches(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length-2;t++){const i=this.grid[e][t];if(i&&!this.visited[e][t]){const s={candies:[i],direction:"horizontal"};let a=1;for(let r=t+1;r<this.grid[e].length;r++){const t=this.grid[e][r];if(!t||t.getCandyType()!==i.getCandyType())break;s.candies.push(t),a++}a>=3&&(this.matches.push(s),this.markVisitedCandies(s))}}}static checkVerticalMatches(){for(let e=0;e<this.grid[0].length;e++)for(let t=0;t<this.grid.length-2;t++){const i=this.grid[t][e];if(i&&!this.visited[t][e]){const s={candies:[i],direction:"vertical"};let a=1;for(let r=t+1;r<this.grid.length;r++){const t=this.grid[r][e];if(!t||t.getCandyType()!==i.getCandyType())break;s.candies.push(t),a++}a>=3&&(this.matches.push(s),this.markVisitedCandies(s))}}}static markVisitedCandies(e){e.candies.forEach((e=>{const t=e.gridY,i=e.gridX;this.visited[t]&&!1===this.visited[t][i]&&(this.visited[t][i]=!0)}))}static initializeVisitedArray(){for(let e=0;e<this.grid.length;e++){this.visited[e]=[];for(let t=0;t<this.grid[e].length;t++)this.visited[e][t]=!1}}},x=class{static init(e){this.scene=e,this.swapEffects=[]}static swapCandiesInternal(e,t){const i=b.grid;if(e&&t){const{x:s,y:a}=e,{x:r,y:n}=t,d=i[a][s],c=i[n][r],h=d;i[a][s]=c,i[n][r]=h,d&&d.setGrid(r,n),c&&c.setGrid(s,a)}}static swapCandies(e,t,i){y.getInstance().updateState(s.SWAP);const a=new Phaser.Math.Vector2(e.gridX,e.gridY),r=new Phaser.Math.Vector2(t.gridX,t.gridY),d=b.getCandyWorldPos(e),c=b.getCandyWorldPos(t);this.swapCandiesInternal(a,r),this.swapEffects.forEach((e=>e.destroy()));const h=this.scene.add.particles(d.x,d.y,"particle-3",{lifespan:500,alpha:{start:1,end:0,ease:"Quad.out"},scale:{start:1,end:0,ease:"Quad.out"},duration:200,blendMode:n.BlendModes.ADD,stopAfter:1}),o=this.scene.add.particles(c.x,c.y,"particle-3",{lifespan:500,alpha:{start:1,end:0,ease:"Quad.out"},scale:{start:1,end:0,ease:"Quad.out"},duration:200,blendMode:n.BlendModes.ADD,stopAfter:1});this.swapEffects.push(h,o),this.scene.add.tween({targets:e,x:c.x,y:c.y,ease:"Quad.out",duration:200,repeat:0,yoyo:!1,onUpdate:(e,t)=>{h.x=t.x,h.y=t.y}}),this.scene.add.tween({targets:t,x:d.x,y:d.y,ease:"Quad.out",duration:200,repeat:0,yoyo:!1,onUpdate:(e,t)=>{o.x=t.x,o.y=t.y},onComplete:()=>{i()}})}},P=class{static init(){this.currentScore=0,this.maxScore=100,this.emitter=new Phaser.Events.EventEmitter}static reset(e){this.maxScore=100*e,this.currentScore=0,this.emitter.emit("score-updated",this.currentScore,this.maxScore)}static addScore(e){this.currentScore>=this.maxScore||(this.currentScore+=e,this.emitter.emit("score-updated",this.currentScore,this.maxScore),this.currentScore>=this.maxScore&&this.emitter.emit("score-reached-max",this.currentScore,this.maxScore))}};class w extends Phaser.GameObjects.Rope{constructor(e){super(e,0,0,"lightning"),e.add.existing(this),this.setDepth(5).setColors(11987706).setBlendMode(n.BlendModes.ADD).play("lightning")}setLine(e,t){this.points[0]=e,this.points[this.points.length-1]=t}}var O;class M{static init(e){this.scene=e,this.firstSelectedCandy=void 0,this.secondSelectedCandy=void 0,this.selectedFrame=e.add.image(0,0,"selected-frame").setScale(.6).setVisible(!1).setDepth(5),e.add.tween({targets:this.selectedFrame,scale:.65,duration:600,repeat:-1,yoyo:!0}),e.input.on("gameobjectdown",this.candyDown,e)}static setFramePosition(e){const t=b.getCandyWorldPos(e);this.selectedFrame.setPosition(t.x,t.y).setVisible(!0)}static candyUp(){this.firstSelectedCandy=void 0,this.secondSelectedCandy=void 0}}O=M,M.candyDown=(e,t)=>{if(y.getInstance().getCurrentState()===s.IDLE&&t)if(O.firstSelectedCandy)if(O.firstSelectedCandy===t)O.firstSelectedCandy=void 0,O.selectedFrame.setVisible(!1);else{O.secondSelectedCandy=t;const e=Math.abs(O.firstSelectedCandy.gridX-O.secondSelectedCandy.gridX),i=Math.abs(O.firstSelectedCandy.gridY-O.secondSelectedCandy.gridY);1===e&&0===i||0===e&&1===i?(y.getInstance().updateState(s.SWAP),b.trySwapCandies(O.firstSelectedCandy,O.secondSelectedCandy)):O.firstSelectedCandy=void 0,O.selectedFrame.setVisible(!1)}else O.firstSelectedCandy=t,O.setFramePosition(O.firstSelectedCandy)};const v=M,R=class{static init(e){this.scene=e}static removeCandy(e,t){b.grid[e.gridY][e.gridX]=void 0,t?this.scene.tweens.addCounter({duration:t,onComplete:()=>{e.destroy()}}):e.destroy()}static removeColorCandyByColorBomb(e,t,i){for(let s=0;s<b.grid.length;s++)for(let a=0;a<b.grid[s].length;a++){const r=b.grid[s][a];r&&r.getCandyType()===t&&(i=Math.max(i,100*(a+1)+200),this.lightningCandy(e,r,100*a,(()=>{this.removeCandy(r)}))),P.addScore(1)}return i}static removeCandyGroup(e){const t=new Set;let i=0;for(const i of e){for(let e=0;e<i.candies.length;e++)t.add(i.candies[e]);if(4===i.candies.length){let e=l.Percent(50)?1:2;v.firstSelectedCandy&&-1!==i.candies.indexOf(v.firstSelectedCandy)?e=i.candies.indexOf(v.firstSelectedCandy):v.secondSelectedCandy&&-1!==i.candies.indexOf(v.secondSelectedCandy)&&(e=i.candies.indexOf(v.secondSelectedCandy));const s=[...i.candies];s.splice(e);const a=i.candies[e];S.playCandyExplodeEffect(a.x,a.y,c[a.getCandyType()]),a.setSpecialType("horizontal"===i.direction?r.VERTICAL_STRIPED:r.HORIZONTAL_STRIPED),this.scene.add.tween({targets:s,x:a.x,y:a.y,duration:50,ease:"Quad.out"}),t.delete(a)}else if(5===i.candies.length){const e=i.candies[2];e.setCandyType(a.COLOR),e.setSpecialType(r.COLOR_BOMB),t.delete(e),S.playCandyExplodeEffect(e.x,e.y,c[e.getCandyType()]),this.scene.add.tween({targets:[i.candies[0],i.candies[1],i.candies[3],i.candies[4]],x:e.x,y:e.y,duration:50,ease:"Quad.out"})}}const n=(e,s,a)=>{!s||s.getSpecialType()!==r.NONE&&s!==e?s&&s.getSpecialType()===r.COLOR_BOMB?(i=this.removeColorCandyByColorBomb(s,e.getCandyType(),i),t.delete(s),this.removeCandy(s,i)):s&&s!==e&&t.add(s):(i=Math.max(i,a),this.scene.tweens.addCounter({duration:a,onComplete:()=>{t.delete(s),this.removeCandy(s),S.playCandyExplodeByStriped(b.getCandyWorldPos(s).x,b.getCandyWorldPos(s).y,e.getSpecialType(),c[e.getCandyType()])}}))};for(const e of t)if(e.getSpecialType()===r.HORIZONTAL_STRIPED){this.scene.cameras.main.shake(200,.002);for(let t=e.gridX;t>=0;t--)n(e,b.grid[e.gridY][t],30*(e.gridX-t+1));for(let t=e.gridX+1;t<b.grid[e.gridY].length;t++)n(e,b.grid[e.gridY][t],30*(t+1-e.gridX));P.addScore(8)}else if(e.getSpecialType()===r.VERTICAL_STRIPED){this.scene.cameras.main.shake(200,.002);for(let t=e.gridY;t>=0;t--)n(e,b.grid[t][e.gridX],30*(e.gridY-t+1));for(let t=e.gridY+1;t<b.grid.length;t++)n(e,b.grid[t][e.gridX],30*(t+1-e.gridY));P.addScore(8)}this.scene.time.delayedCall(i+50,(()=>{y.getInstance().updateState(s.FILL),P.addScore(t.size);for(const e of t)e&&b.grid[e.gridY][e.gridX]&&this.removeCandy(e);b.resetCandy(),b.fillCandy().then((()=>{v.candyUp(),this.scene.checkMatches()}))}))}static lightningCandy(e,t,i,s){const a=new w(this.scene).setVisible(!1);a.setLine(new Phaser.Math.Vector2(e.x,e.y),new Phaser.Math.Vector2(t.x,t.y)),this.scene.tweens.addCounter({duration:i,onComplete:()=>{s&&s(),a.setVisible(!0),this.scene.tweens.addCounter({duration:200,onComplete:()=>{a.destroy()}})}})}},I=class{static init(e){this.scene=e;const t=new Phaser.Math.Vector2(e.scale.width/2,e.scale.height/2),i=Math.min(h.gridWidth*h.tileWidth,h.gridHeight*h.tileHeight);this.rectangle=new Phaser.Geom.Rectangle(t.x-i/2,t.y-i/2,i,i),this.circle=new Phaser.Geom.Circle(t.x,t.y,i/2),this.triangle=new Phaser.Geom.Triangle(t.x,t.y-i*Math.sqrt(3)/4,t.x-i/2,t.y+i*Math.sqrt(3)/4,t.x+i/2,t.y+i*Math.sqrt(3)/4)}static shuffle(e,t){y.getInstance().updateState(s.CREATE),e=l.shuffleArray(e);const i=[this.rectangle,this.circle,this.triangle][l.Int(0,2)],a=i.getPoints(e.length);for(let s=0;s<e.length;s++){const n=s/e.length,d=e[s];this.scene.add.tween({targets:d,x:a[s].x,y:a[s].y,duration:500,ease:"Quad.out",onComplete:()=>{t&&d.getSpecialType()!==r.COLOR_BOMB&&d.setCandyType(h.candyTypes[Phaser.Math.RND.between(0,h.candyTypes.length-1)]),this.scene.tweens.addCounter({from:n,to:n+1,duration:1e3,ease:"Linear",onComplete:()=>{this.scene.add.tween({targets:d,x:b.getCandyWorldPos(d).x,y:b.getCandyWorldPos(d).y,duration:500,ease:"Quad.out",delay:500})},onUpdate:e=>{let t=e.getValue();t>1&&(t-=1);const s=i.getPoint(t);d.setPosition(s.x,s.y)}})}})}return 2500}};class L{static init(e){this.scene=e,this.grid=[],v.init(e),x.init(e),R.init(e),I.init(e),E.init(this.grid),this.candyGridOffset=new Phaser.Math.Vector2((e.scale.width-h.gridWidth*h.tileWidth+h.tileWidth)/2,(e.scale.height-h.gridHeight*h.tileHeight+h.tileWidth)/2),this.scene.add.nineslice(this.scene.scale.width/2,this.scene.scale.height/2,"grid",void 0,h.gridWidth*h.tileWidth+10,h.gridHeight*h.tileHeight+10,50,50,50,50),this.candyLayer=this.createLayerMask()}static createLayerMask(){const e=this.scene.add.layer(),t=this.scene.make.graphics();return t.fillRect(this.scene.scale.width/2-h.gridWidth*h.tileWidth/2,L.candyGridOffset.y-h.tileWidth/2,h.gridWidth*h.tileWidth,h.gridHeight*h.tileHeight),this.candyMask=t.createGeometryMask(),e.setMask(this.candyMask),e}static create(){const e=[];for(let t=0;t<h.gridHeight;t++){this.grid[t]=[];for(let i=0;i<h.gridWidth;i++){const s=L.addCandy(i,t);L.grid[t][i]=s,e.push(s)}}this.candyLayer.clearMask();const t=I.shuffle(e,!1);this.scene.time.delayedCall(t,(()=>{this.candyLayer.setMask(this.candyMask),this.scene.checkMatches()}))}static shuffle(){const e=[];for(let t=0;t<h.gridHeight;t++)for(let i=0;i<h.gridWidth;i++){const s=this.grid[t][i];s&&e.push(s)}this.candyLayer.clearMask();const t=I.shuffle(e,!0);this.scene.time.delayedCall(t,(()=>{this.candyLayer.setMask(this.candyMask),this.scene.checkMatches()}))}static clear(){for(let e=0;e<h.gridHeight;e++)for(let t=0;t<h.gridWidth;t++){const i=this.grid[e][t];i&&R.removeCandy(i)}}static playIdleEffect(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++){const i=this.grid[e][t];i&&this.scene.add.tween({targets:i,y:L.getCandyWorldPos(i).y-20,duration:200,delay:100*(e+t),ease:"Quad.out",yoyo:!0})}}static addCandy(e,t,i,s){const a=null!=i?i:h.candyTypes[Phaser.Math.RND.between(0,h.candyTypes.length-1)],n=null!=s?s:r.NONE,d=new T({scene:this.scene,candyType:a,specialType:n,x:e*h.tileWidth+this.candyGridOffset.x,y:t*h.tileHeight+this.candyGridOffset.y,gridX:e,gridY:t});return this.candyLayer.add(d),d}static fillCandy(){return new Promise((e=>{const t=[];for(let e=0;e<h.gridWidth;e++)t[e]=[];for(let e=0;e<this.grid.length;e++)for(let i=0;i<this.grid[e].length;i++)if(void 0===this.grid[e][i]){const s=this.addCandy(i,e);t[i].push(s),this.grid[e][i]=s}for(let e=0;e<t.length;e++)for(let i=0;i<t[e].length;i++){const s=t[e][i];s.y-=h.tileHeight*t[e].length,this.scene.add.tween({targets:s,y:s.y+h.tileHeight*t[e].length,ease:"Bounce.out",duration:500})}this.scene.tweens.addCounter({duration:550,onComplete:()=>{e()}})}))}static resetCandy(){var e;for(let t=this.grid.length-1;t>0;t--)for(let i=this.grid[t].length-1;i>=0;i--){const s=t;if(void 0===this.grid[s][i]&&void 0!==this.grid[s-1][i]){const a=this.grid[s-1][i];this.grid[s][i]=a,this.grid[s-1][i]=void 0,null==a||a.setGrid(i,s),null===(e=this.grid[s-1][i])||void 0===e||e.setGrid(i,s-1),this.scene.add.tween({targets:a,y:h.tileHeight*s+L.candyGridOffset.y,ease:"Bounce.out",duration:500}),i=this.grid[s].length,t=this.grid.length-1}}}static trySwapCandies(e,t){e&&t&&(y.getInstance().updateState(s.SWAP),x.swapCandies(e,t,(()=>{if(e.getSpecialType()===r.COLOR_BOMB||t.getSpecialType()===r.COLOR_BOMB){const i=e.getSpecialType()===r.COLOR_BOMB?e:t,s=e===i?t:e,a=[];let n=0;if(s.getSpecialType()===r.COLOR_BOMB){const e=Math.floor(h.gridWidth/2);for(let t=0;t<this.grid.length;t++){for(let s=0;s<e;s++){const e=this.grid[t][s];e&&e.getSpecialType()!==r.COLOR_BOMB&&(n=Math.max(n,100*(s+1)+200),R.lightningCandy(i,e,100*s,(()=>{R.removeCandy(e),P.addScore(1)})))}for(let i=this.grid[t].length-1;i>=e;i--){const e=this.grid[t][i];e&&e.getSpecialType()!==r.COLOR_BOMB&&(n=Math.max(n,100*(i+1)+200),R.lightningCandy(s,e,100*(this.grid[t].length-i-1),(()=>{R.removeCandy(e),P.addScore(1)})))}}a.push({candies:[s],direction:"horizontal"})}else if(s.getSpecialType()===r.VERTICAL_STRIPED||s.getSpecialType()===r.HORIZONTAL_STRIPED)for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++){const d=this.grid[e][t];d&&d.getCandyType()===s.getCandyType()&&d.getSpecialType()===r.NONE&&(n=Math.max(n,100*(t+1)+200),R.lightningCandy(i,d,100*t,(()=>{d.setSpecialType(l.Percent(50)?r.VERTICAL_STRIPED:r.HORIZONTAL_STRIPED),a.push({candies:[d],direction:"horizontal"})})))}else n=R.removeColorCandyByColorBomb(i,s.getCandyType(),n);this.scene.time.delayedCall(n,(()=>{R.removeCandy(i),R.removeCandyGroup(a)}))}else if(e.getSpecialType()===r.HORIZONTAL_STRIPED&&t.getSpecialType()===r.HORIZONTAL_STRIPED||e.getSpecialType()===r.VERTICAL_STRIPED&&t.getSpecialType()===r.HORIZONTAL_STRIPED||e.getSpecialType()===r.VERTICAL_STRIPED&&t.getSpecialType()===r.VERTICAL_STRIPED||e.getSpecialType()===r.HORIZONTAL_STRIPED&&t.getSpecialType()===r.VERTICAL_STRIPED){e.setSpecialType(r.HORIZONTAL_STRIPED),t.setSpecialType(r.VERTICAL_STRIPED);const i=[];i.push({candies:[e,t],direction:"horizontal"}),R.removeCandyGroup(i)}else this.scene.checkMatches()})))}static getHints(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length-1;t++){const i=new Phaser.Math.Vector2(t,e),s=new Phaser.Math.Vector2(t+1,e);x.swapCandiesInternal(i,s);const a=E.getMatches();if(a.length>0)return x.swapCandiesInternal(i,s),a;x.swapCandiesInternal(i,s)}for(let e=0;e<this.grid[0].length;e++)for(let t=0;t<this.grid.length-1;t++){const i=new Phaser.Math.Vector2(e,t),s=new Phaser.Math.Vector2(e,t+1);x.swapCandiesInternal(i,s);const a=E.getMatches();if(a.length>0)return x.swapCandiesInternal(i,s),a;x.swapCandiesInternal(i,s)}return[]}static getCandyWorldPos(e){return new Phaser.Math.Vector2(e.gridX*h.tileWidth+this.candyGridOffset.x,e.gridY*h.tileHeight+this.candyGridOffset.y)}}const b=L;class k extends Phaser.GameObjects.Container{constructor(e){super(e),this.onScoreUpdated=(e,t)=>{this.updateProgress(e/t*100)},e.add.existing(this),this.createProgressbar(),this.createParticleEmitter(),P.emitter.on("score-updated",this.onScoreUpdated)}createParticleEmitter(){this.particleEmitter=this.scene.add.particles(0,0,"particle-2",{color:[11987706],scale:{min:2,max:3},lifespan:200,alpha:{start:1,end:0,ease:"Quad.in"},rotate:{start:0,end:2e3,random:!0},angle:{min:120,max:240},speed:500,radial:!0,frequency:15,blendMode:n.BlendModes.ADD}),this.particleEmitter.setPosition(this.progressFill.getRightCenter().x,this.progressFill.getRightCenter().y),this.add(this.particleEmitter)}createProgressbar(){this.currentProgress=1,this.add(this.scene.add.image(-350,0,"progress-head")),this.progressFill=this.scene.add.image(-350,0,"progress-fill").setOrigin(0,.5).setScale(this.currentProgress,1),this.add(this.progressFill)}getProgress(){return this.currentProgress}updateProgress(e){e/2<=50&&(this.currentProgress=e/2,this.scene.add.tween({targets:this.progressFill,scaleX:e/2,duration:200,ease:"Quad.out",onUpdate:()=>{this.particleEmitter.setPosition(this.progressFill.getRightCenter().x,this.progressFill.getRightCenter().y)}}))}}const B=k;class D extends Phaser.Scene{constructor(){super("GameScene"),this.onBoardStateChanged=e=>{switch(e){case s.CREATE:g.changeBackground();break;case s.IDLE:this.tryGetHint();case s.FILL:}},this.onScoreReachedMax=(e,t)=>{S.playConfettiEffect(),this.levelClear=!0}}init(){g.init(this),S.init(this),b.init(this),P.init()}create(){b.create(),this.createProgressBar(),this.cameras.main.setBackgroundColor(7908062),this.idleTimer=5e3,this.levelClear=!1,this.currentLevel=1,this.anims.create({key:"lightning",frames:this.anims.generateFrameNames("lightning",{prefix:"",start:0,end:60}),frameRate:30,yoyo:!0,repeat:-1}),y.getInstance().emitter.on("board-state-changed",this.onBoardStateChanged),P.emitter.on("score-reached-max",this.onScoreReachedMax)}createProgressBar(){new B(this).setDepth(2).setScale(.5).setPosition(this.scale.width/2,b.candyGridOffset.y-h.tileWidth/2-50)}checkMatches(){const e=E.getMatches();e.length>0?(y.getInstance().updateState(s.MATCH),R.removeCandyGroup(e)):this.levelClear?(this.currentLevel++,this.levelClear=!1,P.reset(this.currentLevel),b.shuffle()):(b.trySwapCandies(v.firstSelectedCandy,v.secondSelectedCandy),v.candyUp(),this.tweens.addCounter({duration:200,onComplete:()=>{y.getInstance().updateState(s.IDLE)}}))}tryGetHint(){this.hintTween&&!this.hintTween.isDestroyed()&&y.getInstance().getCurrentState()!==s.SWAP&&(this.hintTween.stop(),this.hintTween.destroy());const e=b.getHints()[0];e?(e.candies.forEach((e=>{e.setBrightnessEffect(1,!0)})),this.hintTween=this.tweens.addCounter({duration:300,repeat:-1,from:0,to:1,yoyo:!0,onUpdate:t=>{e.candies.forEach((e=>{const i=Phaser.Math.Easing.Sine.InOut(t.getValue());e.setBrightnessEffect(1+1.5*i,!0),e.setScale(.35+i*(.35-.38),.35+i*(.35-.32))}))},onStop:()=>{e.candies.forEach((e=>{e.setBrightnessEffect(0,!1),e.setScale(.35)}))}})):b.shuffle()}update(e,t){y.getInstance().getCurrentState()===s.IDLE?(this.idleTimer-=t,this.idleTimer<=0&&(this.idleTimer=3e3,b.playIdleEffect())):this.idleTimer=5e3}}const A={title:"Candy crush",url:"https://github.com/digitsensitive/phaser3-typescript",version:"2.0",scale:{width:720,height:window.innerHeight>window.innerWidth?720*window.innerHeight/window.innerWidth:1080,parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},type:Phaser.WEBGL,parent:"game",scene:[d,D],backgroundColor:"#de3412",render:{pixelArt:!1,antialias:!0}};class H extends Phaser.Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new H(A)}))}},i={};function s(e){var a=i[e];if(void 0!==a)return a.exports;var r=i[e]={exports:{}};return t[e].call(r.exports,r,r.exports,s),r.exports}s.m=t,e=[],s.O=(t,i,a,r)=>{if(!i){var n=1/0;for(o=0;o<e.length;o++){for(var[i,a,r]=e[o],d=!0,c=0;c<i.length;c++)(!1&r||n>=r)&&Object.keys(s.O).every((e=>s.O[e](i[c])))?i.splice(c--,1):(d=!1,r<n&&(n=r));if(d){e.splice(o--,1);var h=a();void 0!==h&&(t=h)}}return t}r=r||0;for(var o=e.length;o>0&&e[o-1][2]>r;o--)e[o]=e[o-1];e[o]=[i,a,r]},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};s.O.j=t=>0===e[t];var t=(t,i)=>{var a,r,[n,d,c]=i,h=0;if(n.some((t=>0!==e[t]))){for(a in d)s.o(d,a)&&(s.m[a]=d[a]);if(c)var o=c(s)}for(t&&t(i);h<n.length;h++)r=n[h],s.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return s.O(o)},i=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var a=s.O(void 0,[216],(()=>s(429)));a=s.O(a)})();