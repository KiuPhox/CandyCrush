(()=>{"use strict";var e,t={87:(e,t,i)=>{var s,a,r,n=i(260);class d extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(10016391),this.createLoadingbar(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(16774867,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)}),this),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()}),this),this.load.pack("preload","./assets/pack.json","preload"),this.load.spritesheet("lightning","./assets/images/lightning-sheet.png",{frameWidth:288,frameHeight:271})}update(){this.scene.start("GameScene")}createLoadingbar(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(6139463,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}!function(e){e.CREATE="create",e.IDLE="idle",e.SWAP="swap",e.MATCH="match",e.FILL="fill",e.NO_MOVE="no-move"}(s||(s={})),function(e){e.BLUE="blue",e.GREEN="green",e.ORANGE="orange",e.PURPLE="purple",e.RED="red",e.YELLOW="yellow",e.COLOR="color"}(a||(a={})),function(e){e.NONE="none",e.VERTICAL_STRIPED="vertical-striped",e.HORIZONTAL_STRIPED="horizontal-striped",e.WRAPPED="wrapped",e.COLOR_BOMB="color-bomb"}(r||(r={}));const h={blue:430079,green:1507072,orange:16736256,purple:14506198,red:16646144,yellow:16776960,color:16777215},c={score:0,highscore:0,gridWidth:10,gridHeight:8,tileWidth:64,tileHeight:64,candyTypes:[a.BLUE,a.GREEN,a.ORANGE,a.PURPLE,a.RED,a.YELLOW]};class o{constructor(e,t){this.name=e,this.currentState=t,this.previousState=t,this.emitter=new Phaser.Events.EventEmitter}static getInstance(){return this.instance||(this.instance=new this),this.instance}updateState(e){this.currentState!==e&&(this.previousState=this.currentState,this.currentState=e,this.handleStateChange(),this.emitter.emit(this.name+"-state-changed",this.currentState,this.previousState))}getCurrentState(){return this.currentState}getPreviousState(){return this.previousState}}class l extends o{constructor(){super("board",s.IDLE)}handleStateChange(){}}class g{static Float(e,t){return Math.random()*(t-e)+e}static Int(e,t){return Math.floor(Math.random()*(t-e+1)+e)}static Percent(e){return this.Float(0,100)<=e}static shuffleArray(e){const t=[...e];for(let e=t.length-1;e>0;e--){const i=Math.floor(Math.random()*(e+1));[t[e],t[i]]=[t[i],t[e]]}return t}}const p=[{texture:"particle-1",config:{lifespan:500,angle:{min:0,max:360},rotate:{start:g.Float(0,360),end:g.Float(0,360)},scale:{start:g.Float(.4,.5),end:0,ease:"Back.in"},speed:{min:100,max:120},gravityY:200,duration:300,stopAfter:g.Int(2,3)}},{texture:"particle-2",config:{lifespan:500,angle:{min:0,max:360},rotate:{min:0,max:360,start:g.Float(0,360),end:g.Float(0,360)},scale:{start:g.Float(1,2),end:0,ease:"Back.in"},speed:{min:100,max:120},gravityY:200,duration:300,blendMode:n.BlendModes.ADD,stopAfter:g.Int(3,5)}},{texture:"particle-3",config:{lifespan:500,alpha:{start:1,end:0,ease:"Quad.in"},scale:{start:0,end:1,ease:"Quart.out"},duration:300,blendMode:n.BlendModes.ADD,stopAfter:1}},{texture:"particle-4",config:{lifespan:500,duration:300,alpha:{start:0,end:1,ease:"Quad.out"},blendMode:n.BlendModes.ADD,stopAfter:1}}];class y{static init(e){this.scene=e,this.particleEmitters=new Map,p.forEach((e=>{this.particleEmitters.set(e.texture,this.scene.add.particles(void 0,void 0,e.texture,e.config))}))}static playCandyExplodeEffect(e,t,i){const s=this.particleEmitters.get("particle-1"),a=this.particleEmitters.get("particle-2"),r=this.particleEmitters.get("particle-3");s&&a&&r&&(s.particleTint=i,r.particleTint=i,s.emitParticleAt(e,t),a.emitParticleAt(e,t),r.emitParticleAt(e,t))}static playCandyExplodeByStriped(e,t){const i=this.particleEmitters.get("particle-4");i&&(i.setDepth(3),i.emitParticleAt(e,t))}}class u extends Phaser.GameObjects.Sprite{constructor(e){super(e.scene,e.x,e.y,e.candyType,e.frame),this.gridX=e.gridX,this.gridY=e.gridY,this.candyType=e.candyType,this.setSpecialType(e.specialType),this.setScale(.7).setInteractive(),this.scene.add.existing(this)}playExplodeEffect(){var e,t;const i=null!==(e=this.getCenter().x)&&void 0!==e?e:0,s=null!==(t=this.getCenter().y)&&void 0!==t?t:0;y.playCandyExplodeEffect(i,s,h[this.candyType])}setGrid(e,t){this.gridX=e,this.gridY=t}getSpecialType(){return this.specialType}setSpecialType(e){switch(this.specialType=e,e){case r.NONE:this.setTexture(this.candyType);break;case r.VERTICAL_STRIPED:case r.HORIZONTAL_STRIPED:this.setTexture(`${this.candyType}-${this.specialType}`);break;case r.COLOR_BOMB:this.setTexture("color")}}getCandyType(){return this.candyType}setCandyType(e){this.candyType=e}destroy(e){this.playExplodeEffect(),super.destroy(e)}}class f{static init(e){this.visited=[],this.matches=[],this.grid=e}static getMatches(){return this.visited=[],this.matches=[],this.initializeVisitedArray(),this.checkHorizontalMatches(),this.initializeVisitedArray(),this.checkVerticalMatches(),this.matches}static checkHorizontalMatches(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length-2;t++){const i=this.grid[e][t];if(i&&!this.visited[e][t]){const s={candies:[i],direction:"horizontal"};let a=1;for(let r=t+1;r<this.grid[e].length;r++){const t=this.grid[e][r];if(!t||t.getCandyType()!==i.getCandyType())break;s.candies.push(t),a++}a>=3&&(this.matches.push(s),this.markVisitedCandies(s))}}}static checkVerticalMatches(){for(let e=0;e<this.grid[0].length;e++)for(let t=0;t<this.grid.length-2;t++){const i=this.grid[t][e];if(i&&!this.visited[t][e]){const s={candies:[i],direction:"vertical"};let a=1;for(let r=t+1;r<this.grid.length;r++){const t=this.grid[r][e];if(!t||t.getCandyType()!==i.getCandyType())break;s.candies.push(t),a++}a>=3&&(this.matches.push(s),this.markVisitedCandies(s))}}}static markVisitedCandies(e){e.candies.forEach((e=>{const t=e.gridY,i=e.gridX;this.visited[t]&&!1===this.visited[t][i]&&(this.visited[t][i]=!0)}))}static initializeVisitedArray(){for(let e=0;e<this.grid.length;e++){this.visited[e]=[];for(let t=0;t<this.grid[e].length;t++)this.visited[e][t]=!1}}}class C{static init(e){this.scene=e,this.swapEffects=[]}static swapCandiesInternal(e,t){const i=E.grid;if(e&&t){const{x:s,y:a}=e,{x:r,y:n}=t,d=i[a][s],h=i[n][r],c=d;i[a][s]=h,i[n][r]=c,d&&d.setGrid(r,n),h&&h.setGrid(s,a)}}static swapCandies(e,t,i){l.getInstance().updateState(s.SWAP);const a=new Phaser.Math.Vector2(e.gridX,e.gridY),r=new Phaser.Math.Vector2(t.gridX,t.gridY);this.swapCandiesInternal(a,r),this.swapEffects.forEach((e=>e.destroy()));const d=this.scene.add.particles(32,32,"particle-3",{lifespan:500,alpha:{start:1,end:0,ease:"Quad.out"},scale:{start:1,end:0,ease:"Quad.out"},duration:200,blendMode:n.BlendModes.ADD,stopAfter:1}),h=this.scene.add.particles(32,32,"particle-3",{lifespan:500,alpha:{start:1,end:0,ease:"Quad.out"},scale:{start:1,end:0,ease:"Quad.out"},duration:200,blendMode:n.BlendModes.ADD,stopAfter:1});this.swapEffects.push(d,h),this.scene.add.tween({targets:e,x:t.x,y:t.y,ease:"Quad.out",duration:200,repeat:0,yoyo:!1,onUpdate:(e,t)=>{var i,s;d.x=null!==(i=t.getCenter().x)&&void 0!==i?i:0,d.y=null!==(s=t.getCenter().y)&&void 0!==s?s:0}}),this.scene.add.tween({targets:t,x:e.x,y:e.y,ease:"Quad.out",duration:200,repeat:0,yoyo:!1,onUpdate:(e,t)=>{var i,s;h.x=null!==(i=t.getCenter().x)&&void 0!==i?i:0,h.y=null!==(s=t.getCenter().y)&&void 0!==s?s:0},onComplete:()=>{i()}})}}var m;class S{static init(e){this.scene=e,this.firstSelectedCandy=void 0,this.secondSelectedCandy=void 0,this.selectedFrame=e.add.image(0,0,"selected-frame").setScale(.6).setVisible(!1),e.add.tween({targets:this.selectedFrame,scale:.65,duration:600,repeat:-1,yoyo:!0}),e.input.on("gameobjectdown",this.candyDown,e)}static setFramePosition(e){this.selectedFrame.setPosition(e.getCenter().x,e.getCenter().y).setVisible(!0)}static candyUp(){this.firstSelectedCandy=void 0,this.secondSelectedCandy=void 0}}m=S,S.candyDown=(e,t)=>{if(l.getInstance().getCurrentState()===s.IDLE&&t)if(m.firstSelectedCandy)if(m.firstSelectedCandy===t)m.firstSelectedCandy=void 0,m.selectedFrame.setVisible(!1);else{m.secondSelectedCandy=t;const e=Math.abs(m.firstSelectedCandy.gridX-m.secondSelectedCandy.gridX),i=Math.abs(m.firstSelectedCandy.gridY-m.secondSelectedCandy.gridY);1===e&&0===i||0===e&&1===i?(l.getInstance().updateState(s.SWAP),E.trySwapCandies(m.firstSelectedCandy,m.secondSelectedCandy)):m.firstSelectedCandy=void 0,m.selectedFrame.setVisible(!1)}else m.firstSelectedCandy=t,m.setFramePosition(m.firstSelectedCandy)};class T extends Phaser.GameObjects.Rope{constructor(e){super(e,0,0,"lightning"),e.add.existing(this),this.setDepth(5).setBlendMode(n.BlendModes.ADD).play("lightning")}setLine(e,t){this.points[0]=e,this.points[this.points.length-1]=t}}class E{static init(e){this.scene=e,this.grid=[],C.init(e),f.init(this.grid),this.candyGridOffset=new Phaser.Math.Vector2((e.scale.width-c.gridWidth*c.tileWidth+c.tileWidth)/2,(e.scale.height-c.gridHeight*c.tileHeight+c.tileWidth)/2)}static create(){l.getInstance().updateState(s.CREATE);let e=[];for(let t=0;t<c.gridHeight;t++){this.grid[t]=[];for(let i=0;i<c.gridWidth;i++){const s=this.addCandy(i,t);this.grid[t][i]=s,e.push(s)}}e=g.shuffleArray(e);const t=500/e.length;this.scene.tweens.addCounter({from:260,to:40,duration:1e3,ease:"Sine.easeInOut",repeat:1,yoyo:!0,onUpdate:t=>{Phaser.Actions.RotateAroundDistance(e,{x:this.scene.scale.width/2,y:this.scene.scale.height/2},.03,t.getValue())},onComplete:()=>{e.forEach(((e,i)=>{this.scene.add.tween({targets:e,x:e.gridX*c.tileWidth+this.candyGridOffset.x,y:e.gridY*c.tileHeight+this.candyGridOffset.y,duration:500,ease:"Quad.out",delay:i*t})}))}});const i=4e3+e.length*t+500;return this.scene.time.delayedCall(i,(()=>{this.scene.checkMatches()})),this.grid}static clear(){for(let e=0;e<c.gridHeight;e++)for(let t=0;t<c.gridWidth;t++){const i=this.grid[e][t];i&&(i.destroy(),this.grid[e][t]=void 0)}}static playIdleEffect(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++){const i=this.grid[e][t];i&&this.scene.add.tween({targets:i,y:i.y-20,duration:200,delay:100*(e+t),ease:"Quad.out",yoyo:!0})}}static addCandy(e,t,i,s){const a=null!=i?i:c.candyTypes[Phaser.Math.RND.between(0,c.candyTypes.length-1)],n=null!=s?s:r.NONE;return new u({scene:this.scene,candyType:a,specialType:n,x:e*c.tileWidth+this.candyGridOffset.x,y:t*c.tileHeight+this.candyGridOffset.y,gridX:e,gridY:t})}static fillCandy(){return new Promise((e=>{const t=[];for(let e=0;e<c.gridWidth;e++)t[e]=[];for(let e=0;e<this.grid.length;e++)for(let i=0;i<this.grid[e].length;i++)if(void 0===this.grid[e][i]){const s=this.addCandy(i,e);t[i].push(s),this.grid[e][i]=s}for(let e=0;e<t.length;e++)for(let i=0;i<t[e].length;i++){const s=t[e][i];s.y-=c.tileHeight*t[e].length,this.scene.add.tween({targets:s,y:s.y+c.tileHeight*t[e].length,ease:"Bounce.out",duration:500})}this.scene.tweens.addCounter({duration:550,onComplete:()=>{e()}})}))}static resetCandy(){var e;for(let t=this.grid.length-1;t>0;t--)for(let i=this.grid[t].length-1;i>=0;i--){const s=t;if(void 0===this.grid[s][i]&&void 0!==this.grid[s-1][i]){const a=this.grid[s-1][i];this.grid[s][i]=a,this.grid[s-1][i]=void 0,null==a||a.setGrid(i,s),null===(e=this.grid[s-1][i])||void 0===e||e.setGrid(i,s-1),this.scene.add.tween({targets:a,y:c.tileHeight*s+E.candyGridOffset.y,ease:"Bounce.out",duration:500}),i=this.grid[s].length,t=this.grid.length-1}}}static trySwapCandies(e,t){e&&t&&(l.getInstance().updateState(s.SWAP),C.swapCandies(e,t,(()=>{if(e.getSpecialType()===r.COLOR_BOMB||t.getSpecialType()===r.COLOR_BOMB){const i=e.getSpecialType()===r.COLOR_BOMB?e:t,s=e===i?t:e,a=[];let n=0;if(s.getSpecialType()===r.COLOR_BOMB){const e=Math.floor(c.gridWidth/2);for(let t=0;t<this.grid.length;t++){for(let s=0;s<e;s++){const e=this.grid[t][s];e&&e.getSpecialType()!==r.COLOR_BOMB&&(n=Math.max(n,100*(s+1)+500),this.lightningCandy(i,e,100*s,(()=>{e.destroy(),this.grid[e.gridY][e.gridX]=void 0})))}for(let i=this.grid[t].length-1;i>=e;i--){const e=this.grid[t][i];e&&e.getSpecialType()!==r.COLOR_BOMB&&(n=Math.max(n,100*(i+1)+500),this.lightningCandy(s,e,100*(this.grid[t].length-i-1),(()=>{e.destroy(),this.grid[e.gridY][e.gridX]=void 0})))}}a.push({candies:[i,s],direction:"horizontal"})}else if(s.getSpecialType()===r.VERTICAL_STRIPED||s.getSpecialType()===r.HORIZONTAL_STRIPED){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++){const d=this.grid[e][t];d&&d.getCandyType()===s.getCandyType()&&d.getSpecialType()===r.NONE&&(n=Math.max(n,100*(t+1)+500),this.lightningCandy(i,d,100*t,(()=>{d.setSpecialType(g.Percent(50)?r.VERTICAL_STRIPED:r.HORIZONTAL_STRIPED),a.push({candies:[d],direction:"horizontal"})})))}a.push({candies:[i],direction:"horizontal"})}else{for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length;t++){const a=this.grid[e][t];a&&a.getCandyType()===s.getCandyType()&&(n=Math.max(n,100*(t+1)+500),this.lightningCandy(i,a,100*t,(()=>{a.destroy(),this.grid[a.gridY][a.gridX]=void 0})))}a.push({candies:[i],direction:"horizontal"})}this.scene.time.delayedCall(n,(()=>{this.removeCandyGroup(a)}))}else this.scene.checkMatches()})))}static lightningCandy(e,t,i,s){const a=new T(this.scene).setVisible(!1);a.setLine(new Phaser.Math.Vector2(e.x,e.y),new Phaser.Math.Vector2(t.x,t.y)),this.scene.tweens.addCounter({duration:i,onComplete:()=>{s&&s(),a.setVisible(!0),this.scene.tweens.addCounter({duration:200,onComplete:()=>{a.destroy()}})}})}static removeCandyGroup(e){const t=new Set;let i=0;for(const i of e){for(let e=0;e<i.candies.length;e++)t.add(i.candies[e]);if(4===i.candies.length){let e=g.Percent(50)?1:2;S.firstSelectedCandy&&-1!==i.candies.indexOf(S.firstSelectedCandy)?e=i.candies.indexOf(S.firstSelectedCandy):S.secondSelectedCandy&&-1!==i.candies.indexOf(S.secondSelectedCandy)&&(e=i.candies.indexOf(S.secondSelectedCandy));const s=[...i.candies];s.splice(e);const a=i.candies[e];y.playCandyExplodeEffect(a.x,a.y,h[a.getCandyType()]),i.candies[e].setSpecialType("horizontal"===i.direction?r.VERTICAL_STRIPED:r.HORIZONTAL_STRIPED),this.scene.add.tween({targets:s,x:i.candies[e].x,y:i.candies[e].y,duration:50,ease:"Quad.out"}),t.delete(i.candies[e])}else if(5===i.candies.length){const e=i.candies[2];e.setCandyType(a.COLOR),e.setSpecialType(r.COLOR_BOMB),t.delete(e),y.playCandyExplodeEffect(e.x,e.y,h[e.getCandyType()]),this.scene.add.tween({targets:[i.candies[0],i.candies[1],i.candies[3],i.candies[4]],x:e.x,y:e.y,duration:50,ease:"Quad.out"})}}const n=(e,s,a)=>{!s||s.getSpecialType()!==r.NONE&&s.getSpecialType()!==r.COLOR_BOMB&&s!==e?s&&s!==e&&t.add(s):(i=Math.max(i,a),this.scene.tweens.addCounter({duration:a,onComplete:()=>{t.delete(s),s.destroy(),this.grid[s.gridY][s.gridX]=void 0,y.playCandyExplodeByStriped(s.x,s.y)}}))};for(const e of t)if(e.getSpecialType()===r.HORIZONTAL_STRIPED){this.scene.cameras.main.shake(200,.002);for(let t=e.gridX;t>=0;t--)n(e,this.grid[e.gridY][t],30*(e.gridX-t+1));for(let t=e.gridX+1;t<this.grid[e.gridY].length;t++)n(e,this.grid[e.gridY][t],30*(t+1-e.gridX))}else if(e.getSpecialType()===r.VERTICAL_STRIPED){this.scene.cameras.main.shake(200,.002);for(let t=e.gridY;t>=0;t--)n(e,this.grid[t][e.gridX],30*(e.gridY-t+1));for(let t=e.gridY+1;t<this.grid.length;t++)n(e,this.grid[t][e.gridX],30*(t+1-e.gridY))}this.scene.time.delayedCall(i+50,(()=>{l.getInstance().updateState(s.FILL);for(const e of t)e&&this.grid[e.gridY][e.gridX]&&(e.destroy(),this.grid[e.gridY][e.gridX]=void 0);this.resetCandy(),this.fillCandy().then((()=>{S.candyUp(),this.scene.checkMatches()}))}))}static getHints(){for(let e=0;e<this.grid.length;e++)for(let t=0;t<this.grid[e].length-1;t++){const i=new Phaser.Math.Vector2(t,e),s=new Phaser.Math.Vector2(t+1,e);C.swapCandiesInternal(i,s);const a=f.getMatches();if(a.length>0)return C.swapCandiesInternal(i,s),a;C.swapCandiesInternal(i,s)}for(let e=0;e<this.grid[0].length;e++)for(let t=0;t<this.grid.length-1;t++){const i=new Phaser.Math.Vector2(e,t),s=new Phaser.Math.Vector2(e,t+1);C.swapCandiesInternal(i,s);const a=f.getMatches();if(a.length>0)return C.swapCandiesInternal(i,s),a;C.swapCandiesInternal(i,s)}return[]}}class w extends Phaser.GameObjects.Container{constructor(e){super(e),e.add.existing(this),this.createProgressbar()}createProgressbar(){this.currentProgress=1,this.add(this.scene.add.image(-350,0,"progress-head")),this.progressFill=this.scene.add.image(-350,0,"progress-fill").setOrigin(0,.5).setScale(this.currentProgress,1),this.add(this.progressFill)}getProgress(){return this.currentProgress}updateProgress(e){e<=50&&(this.currentProgress=e,this.scene.add.tween({targets:this.progressFill,scaleX:e,duration:200,ease:"Quad.out"}))}}class O extends Phaser.Scene{constructor(){super("GameScene"),this.onBoardStateChanged=e=>{switch(e){case s.IDLE:case s.FILL:}}}init(){y.init(this),E.init(this),S.init(this),l.getInstance().emitter.on("board-state-changed",this.onBoardStateChanged),this.createRectangleMask(),this.progressBar=new w(this).setDepth(2).setScale(.5).setPosition(this.rectangleMask.getCenter().x,this.rectangleMask.getCenter().y),this.cameras.main.setBackgroundColor(7908062),this.cameras.main.setZoom(8/c.gridWidth),E.create(),this.tryGetHint(),this.idleTimer=5e3,this.anims.create({key:"lightning",frames:this.anims.generateFrameNames("lightning",{prefix:"",start:0,end:60}),frameRate:30,yoyo:!0,repeat:-1})}createRectangleMask(){this.rectangleMask=this.add.rectangle(0,0,this.scale.width,E.candyGridOffset.y-c.tileWidth/2,7908062).setOrigin(0).setDepth(1)}checkMatches(){this.hintTween&&!this.hintTween.isDestroyed()&&l.getInstance().getCurrentState()!==s.SWAP&&(this.hintTween.stop(),this.hintTween.destroy());const e=f.getMatches();e.length>0?(this.progressBar.updateProgress(this.progressBar.getProgress()+1),l.getInstance().updateState(s.MATCH),E.removeCandyGroup(e)):(l.getInstance().getCurrentState()===s.FILL&&this.tryGetHint(),E.trySwapCandies(S.firstSelectedCandy,S.secondSelectedCandy),S.candyUp(),this.tweens.addCounter({duration:200,onComplete:()=>{l.getInstance().updateState(s.IDLE)}}))}tryGetHint(){const e=E.getHints()[0],t=[];e?(e.candies.forEach((e=>{var i;e.preFX&&t.push(null===(i=e.preFX)||void 0===i?void 0:i.addGlow())})),this.hintTween=this.tweens.addCounter({duration:300,repeat:-1,from:0,to:1,yoyo:!0,onUpdate:i=>{e.candies.forEach(((e,s)=>{const a=Phaser.Math.Easing.Bounce.InOut(i.getValue()),r=Phaser.Math.Easing.Sine.InOut(i.getValue());e.setScale(.7+a*(.7-.75),.7+a*(.7-.65)),t[s].outerStrength=2+5*r}))},onStop:()=>{e.candies.forEach(((e,i)=>{t[i].outerStrength=0,e.setScale(.7)}))}})):(E.clear(),E.create(),this.checkMatches(),this.tryGetHint())}update(e,t){l.getInstance().getCurrentState()===s.IDLE?(this.idleTimer-=t,this.idleTimer<=0&&(this.idleTimer=3e3,E.playIdleEffect())):this.idleTimer=5e3}}const v={title:"Candy crush",url:"https://github.com/digitsensitive/phaser3-typescript",version:"2.0",scale:{width:520,height:window.innerHeight>window.innerWidth?520*window.innerHeight/window.innerWidth:700,parent:"phaser-game",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},type:Phaser.WEBGL,parent:"game",scene:[d,O],backgroundColor:"#de3412",render:{pixelArt:!1,antialias:!0}};class x extends Phaser.Game{constructor(e){super(e)}}window.addEventListener("load",(()=>{new x(v)}))}},i={};function s(e){var a=i[e];if(void 0!==a)return a.exports;var r=i[e]={exports:{}};return t[e].call(r.exports,r,r.exports,s),r.exports}s.m=t,e=[],s.O=(t,i,a,r)=>{if(!i){var n=1/0;for(o=0;o<e.length;o++){for(var[i,a,r]=e[o],d=!0,h=0;h<i.length;h++)(!1&r||n>=r)&&Object.keys(s.O).every((e=>s.O[e](i[h])))?i.splice(h--,1):(d=!1,r<n&&(n=r));if(d){e.splice(o--,1);var c=a();void 0!==c&&(t=c)}}return t}r=r||0;for(var o=e.length;o>0&&e[o-1][2]>r;o--)e[o]=e[o-1];e[o]=[i,a,r]},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0};s.O.j=t=>0===e[t];var t=(t,i)=>{var a,r,[n,d,h]=i,c=0;if(n.some((t=>0!==e[t]))){for(a in d)s.o(d,a)&&(s.m[a]=d[a]);if(h)var o=h(s)}for(t&&t(i);c<n.length;c++)r=n[c],s.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return s.O(o)},i=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var a=s.O(void 0,[216],(()=>s(87)));a=s.O(a)})();